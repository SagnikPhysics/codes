# -*- coding: utf-8 -*-
"""gaussian confidence level.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12ArLQySmfMYpIvZVf2a2HPJkhnx1Rx4t
"""

import numpy as np
import matplotlib.pyplot as pl

def trapezoidal(x0,xn,n):
  def Gaussian(x):
    return np.exp(-x**2)
  h= (xn-x0)/n    # step size
  integration= Gaussian(x0)+Gaussian(xn)
  for i in range(1,n):
    temp = x0+i*h
    integration = integration+2*Gaussian(temp)
  integration = integration*h/2
  return integration

def probability_confidence(N):
  a = -N/np.sqrt(2.0)
  b = N/np.sqrt(2.0)
  interval = 500
  return 1/np.sqrt(np.pi)*trapezoidal(a,b,interval)

from scipy import stats
mean = 0.0
std = 1.0
x = np.linspace(mean-5*std, mean+5*std, 1000)
iq = stats.norm(mean,std)
pl.plot(x,iq.pdf(x),'k-',lw=1)
colors = ["y","r",]
colors = colors+list(reversed(colors))
for i, color in zip(range(-2,2), colors):
  low = mean + i*std
  high = mean + (i+1)*std
  px = x[np.logical_and(x>=low,x<=high)]
  pl.fill_between(px,iq.pdf(px),color=color,alpha=0.5,linewidth=0,)
pl.tight_layout()
pl.xlim(min(x),max(x))
pl.ylim(min(iq.pdf(x)),max(iq.pdf(x))+0.01)
pl.xticks([mean-2*std,mean-std,mean,mean+std,mean+2*std], ["μ-2σ","μ-σ","μ","μ+σ","μ+2σ"])
pl.yticks([])
pl.xlabel("$x$")
pl.ylabel("$f(x) = \dfrac{1}{\sqrt{2\pi\sigma^2}} e^{-\dfrac{(x-\mu)^2}{2\sigma^2}}$")
pl.show()

print("Probability in 1σ confidence level = ",round(probability_confidence(1)*100.0,2),"% and")
print("Probability in 2σ confidence level = ",round(probability_confidence(2)*100.0,2),"%")